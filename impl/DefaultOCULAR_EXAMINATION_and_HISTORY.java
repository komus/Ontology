package Ontology.impl;

import Ontology.*;

import java.util.Collection;

import org.protege.owl.codegeneration.WrappedIndividual;
import org.protege.owl.codegeneration.impl.WrappedIndividualImpl;

import org.semanticweb.owlapi.model.IRI;
import org.semanticweb.owlapi.model.OWLOntology;


/**
 * Generated by Protege (http://protege.stanford.edu).<br>
 * Source Class: DefaultOCULAR_EXAMINATION_and_HISTORY <br>
 * @version generated on Mon Nov 02 00:41:37 WAT 2015 by oyindolapo
 */
public class DefaultOCULAR_EXAMINATION_and_HISTORY extends WrappedIndividualImpl implements OCULAR_EXAMINATION_and_HISTORY {

    public DefaultOCULAR_EXAMINATION_and_HISTORY(OWLOntology ontology, IRI iri) {
        super(ontology, iri);
    }





    /* ***************************************************
     * Object Property http://www.semanticweb.org/oyindolapo/ontologies/2015/9/updated_ontology#has_task
     */
     
    public Collection<? extends WrappedIndividual> getHas_task() {
        return getDelegate().getPropertyValues(getOwlIndividual(),
                                               Vocabulary.OBJECT_PROPERTY_HAS_TASK,
                                               WrappedIndividualImpl.class);
    }

    public boolean hasHas_task() {
	   return !getHas_task().isEmpty();
    }

    public void addHas_task(WrappedIndividual newHas_task) {
        getDelegate().addPropertyValue(getOwlIndividual(),
                                       Vocabulary.OBJECT_PROPERTY_HAS_TASK,
                                       newHas_task);
    }

    public void removeHas_task(WrappedIndividual oldHas_task) {
        getDelegate().removePropertyValue(getOwlIndividual(),
                                          Vocabulary.OBJECT_PROPERTY_HAS_TASK,
                                          oldHas_task);
    }


}
