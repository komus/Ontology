package Ontology.impl;

import Ontology.*;

import java.util.Collection;

import org.protege.owl.codegeneration.WrappedIndividual;
import org.protege.owl.codegeneration.impl.WrappedIndividualImpl;

import org.semanticweb.owlapi.model.IRI;
import org.semanticweb.owlapi.model.OWLOntology;


/**
 * Generated by Protege (http://protege.stanford.edu).<br>
 * Source Class: DefaultIOP <br>
 * @version generated on Mon Nov 02 00:41:37 WAT 2015 by oyindolapo
 */
public class DefaultIOP extends WrappedIndividualImpl implements IOP {

    public DefaultIOP(OWLOntology ontology, IRI iri) {
        super(ontology, iri);
    }





    /* ***************************************************
     * Data Property http://www.semanticweb.org/oyindolapo/ontologies/2015/9/updated_ontology#IOP_level
     */
     
    public Collection<? extends Integer> getIOP_level() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_IOP_LEVEL, Integer.class);
    }

    public boolean hasIOP_level() {
		return !getIOP_level().isEmpty();
    }

    public void addIOP_level(Integer newIOP_level) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_IOP_LEVEL, newIOP_level);
    }

    public void removeIOP_level(Integer oldIOP_level) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_IOP_LEVEL, oldIOP_level);
    }


}
